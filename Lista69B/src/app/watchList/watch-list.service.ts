import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable, map } from 'rxjs';
import { environment } from 'src/environments/environment';

@Injectable({
  providedIn: 'root'
})
export class WatchListService {

  constructor(private api:HttpClient) { }

  getWatchList():Observable<trackingItem[]>{
    const endPoint='TrackingList';
    return this.api.get<trackingItem[]>(environment.apiLista69B+endPoint); 
  }

  add(entity:any){
    const endPoint='TrackingList';
    const httpOptions = {
      headers: new HttpHeaders({'Content-Type': 'application/json'})
    }
    return this.api.post(environment.apiLista69B+endPoint,JSON.stringify(entity),httpOptions );
  }

  updated(entity:any,id:string){
    const endPoint='TrackingList';
    const httpOptions = {
      headers: new HttpHeaders({'Content-Type': 'application/json'})
    }
    let request=entity as trackingItem;
    request.id=id;
    console.log(request);
    return this.api.put(environment.apiLista69B+endPoint,JSON.stringify(request),httpOptions );
  }

  getById(id:string):Observable<trackingItem>{
    const endPoint='TrackingList/GetById';
    return this.api.get<trackingItem>(environment.apiLista69B+endPoint+'?Id='+id).pipe(map((respose:any)=>{
      
      return respose;
    })); 
  }
}
// Generated by https://quicktype.io

export interface trackingItem {
  id:          string;
  rfc:         string;
  razonSocial: string;
  activo:      boolean;
}
